
class PersonResource(resources.ModelResource):
#Not sure if I need to change these as well as the admin fields
#this is what changes what gets imported
	#pass
	data={}
	#birth_place = fields.Field(widget=widgets.ForeignKeyWidget(Place,'name'))
	def import_obj(self, obj, data, dry_run):
		newlist=[]
		for field in self.get_fields():
		    skip=False
		    field_name=self.get_field_name(field)
		    print field_name, "field_name"
		    if (field_name=='birth_place' and 'birth_place' in data) or (field_name=='death_place' and 'death_place' in data):
			print data, "this is the data"			
			
			
			new_data=Place.objects.all()
			print new_data
			match=False
			index = 0
			for i in new_data:
				#print Person.objects.i
				
				#if i wanted to do this for a diliniated list, I would just separate out the list, and then check to see if each of them match any of the tei ids 
				if str(i.id_tei) == str(data[field_name]):
					match=True
					print 
					print "Ooo we match a ticha id, we need to do something"
					data[field_name]= i.id
										
					print new_data[index], "#####"
				index = index + 1 	
			if not match:
				print "No matching ticha id for:",data[field_name],",:("
		
	  	    elif field_name=='affiliations' and 'affiliations' in data:
			new_data=Org.objects.all()
			print new_data
			print data[field_name], "data fieldname"
			match=False
			index = 0
			mylist=[]
			mystr=""
			for item in str(data[field_name]):
				if item <> ";":
					mystr=mystr+item
				else:
					mylist=mylist+[mystr]
					mystr=""
			mylist=mylist+[mystr]
			print mylist, "My list!"
			
			for i in new_data:
				print i.id_tei,i.id
				if str(i.id_tei) in mylist:
					match=True
					print 
					print "Ooo we match a ticha id, we need to do something"
					newlist= newlist + [i.id]
					print newlist, "This is the list of ids"
					skip=True
					print newlist,"NEWLIST"				
					print new_data[index], "#####"
				index = index + 1 	
			if not match:
				print "No matching ticha id for:",data[field_name]," in many-to-many import,:("
		
		    print obj, "Obj"
		    
		    print  data, "data"
		    print skip
		    
		    if field_name<>'affiliations':
			print field, "field at this point"
		    	self.import_field(field, obj, data)
		    else:
			data['affiliations']=str(newlist)[1:-1]
			"""
			print obj, "RIGHTHERE"
			obj.save()
			print obj.affiliations.all()
			print "WOOOO"
			mytlist = [4,3]
			#can check in shell like this:
			#>>> a=Person.objects.get(id=2378)
			#>>> a.affiliations.all()
			print newlist, "IM MR NEWLIST LOOK AT ME"
			for item in newlist:
				print item, 'item'
				obj.affiliations.add(item)
				print obj
			#data['affiliations'] = mytlist
			#self.import_field(field,obj,data)
			"""
			'''
			for item in mytlist:
				#obj.affiliations.add(
				data['affiliations'] = item
				print item, data
				#field.save(obj,data)
				self.import_field(field, obj, data)
			'''

	
	class Meta:
		model = Person
		#birth_place = fields.Field(widget=widgets.ForeignKeyWidget(Place,'name'))	
		#95% sure this is uneccessary, pretty sure this is just white listing fields, but if we want them all, typing all this was dumb
		fields =('id', 'id_tei', 'uri_lcnaf', 'last_name', 'first_name', 'middle_name','display_name', 'other_names', 'birth_date', 'death_date', 'birth_place', 'death_place', 'gender', 'affiliation1', 'affiliation2', 'bio_notes', 'data_notes','citations', 'notes', 'PYM_index','affiliations')
		#exclude = ('id')
class PersonAdmin(ImportExportModelAdmin):
	fields = ['id_tei', 'uri_lcnaf', 'last_name', 'first_name', 'middle_name','display_name', 'other_names', 'birth_date', 'death_date', 'birth_place', 'death_place', 'gender', 'affiliation1', 'affiliation2', 'bio_notes', 'data_notes','citations', 'notes', 'PYM_index','affiliations']
	resource_class = PersonResource
	list_display = ('last_name' , 'first_name', 'id_tei')
	pass





##################################################################################3
	def import_obj(self, obj, data, dry_run):
		newlist=[]
		for field in self.get_fields():
		    skip=False
		    field_name=self.get_field_name(field)
		    if (field_name=='birth_place' and 'birth_place' in data) or (field_name=='death_place' and 'death_place' in data):
			
			
			new_data=Place.objects.all()
			match=False
			index = 0
			for i in new_data:
				if str(i.id_tei) == str(data[field_name]):
					match=True
					data[field_name]= i.id
										
				index = index + 1 	
			if not match:
				print "No matching ticha id for:",data[field_name],",:("
		
	  	    elif field_name=='affiliations' and 'affiliations' in data:
			new_data=Org.objects.all()
			match=False
			index = 0
			mylist=[]
			mystr=""
			for item in str(data[field_name]):
				if item <> ";":
					mystr=mystr+item
				else:
					mylist=mylist+[mystr]
					mystr=""
			mylist=mylist+[mystr]
			for i in new_data:
				print i.id_tei,i.id
				if str(i.id_tei) in mylist:
					match=True
					newlist= newlist + [i.id]					
				index = index + 1 	
			if not match:
				print "No matching ticha id for:",data[field_name]," in many-to-many import,:("
		    if field_name<>'affiliations':
		    	self.import_field(field, obj, data)
		    else:
			data['affiliations']=str(newlist)[1:-1]

